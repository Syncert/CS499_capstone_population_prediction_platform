version: "3.9"

services:
  db:
    image: postgres:16
    container_name: popdb
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  api:
    image: ppp-app:latest
    build:
      context: .
      dockerfile: api/Dockerfile    # installs .[api,etl,ml], sets USER appuser
    container_name: popapi
    env_file: .env
    environment:
      DB_HOST: db
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${API_PORT:-8000}:8000"
    # mount artifacts only if you want them persisted/visible on host
    volumes:
      - ./artifacts:/app/artifacts
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "python - <<'PY'\nimport urllib.request,sys\ntry:\n  r=urllib.request.urlopen('http://localhost:8000/health', timeout=5)\n  sys.exit(0 if r.status==200 else 1)\nexcept Exception:\n  sys.exit(1)\nPY"
        ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    restart: unless-stopped

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile        # multi-stage â†’ nginx
    container_name: ppui
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "80:80"
    restart: unless-stopped

volumes:
  pgdata: